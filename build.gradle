buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.cinnober.gradle.semver-git" version "2.2.2"
    id "com.jfrog.bintray" version "1.8.1"
}


allprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'java'
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.cinnober.gradle.semver-git'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

ext.snapshotSuffix = "SNAPSHOT+<dirty><sha>"

group = "com.namehillsoftware"
archivesBaseName = "handoff"
version = project.version

sourceSets {
    main {
        java {
            sourceCompatibility = JavaVersion.VERSION_1_7
            targetCompatibility = JavaVersion.VERSION_1_7
        }
    }

    test {
        java {
            srcDir 'src/specs/java'
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }

    specs {
        java {
            srcDir 'src/specs/java'
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'org.mockito:mockito-core:2.+'
    testImplementation 'junit:junit:4.+'
    testImplementation 'org.assertj:assertj-core:2.+'
    specsImplementation 'junit:junit:4.+'
    specsImplementation 'org.assertj:assertj-core:2.+'
    specsImplementation 'org.mockito:mockito-core:2.+'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

if (!hasProperty("sonatypeUsername")) {
    bintrayUser = System.getenv('BINTRAY_USER')
}

if (!hasProperty("bintrayApiKey")) {
    bintrayApiKey = System.getenv('BINTRAY_API_KEY')
}

bintray {
    user = bintrayUser
    key = bintrayApiKey 
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'handoff'
        userOrg = bintrayUser
        licenses = ['MIT']
        vcsUrl = 'https://github.com/namehillsoftware/handoff.git'
    }
    version {
        name = project.version
        released = new Date()
    }
}

def pomConfig = {
    description = 'Promises Library for Java'
    url = 'http://www.namehillsoftware.com/'

    scm {
        connection = 'https://github.com/namehillsoftware/handoff.git'
        developerConnection = 'https://github.com/namehillsoftware/handoff.git'
        url = 'https://github.com/namehillsoftware/handoff'
    }

    licenses {
        license {
            url = 'https://github.com/namehillsoftware/handoff/blob/master/LICENSE'
        }
    }

    developers {
        developer {
            id = 'david'
            name = 'David Vedvick'
            email = 'dvedvick@gmail.com'
        }
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar

            pom.withXml {
                def root = asNode()
                root.children().last() + pomConfig
            }
        }
    }
}
